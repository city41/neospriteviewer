{"version":3,"sources":["webpack:///./src/components/header.tsx","webpack:///./src/palette.ts","webpack:///./src/components/cTile.tsx","webpack:///./src/components/sTile.tsx","webpack:///./src/indexedData.ts","webpack:///./src/components/detailedTile.tsx","webpack:///./src/components/dataLoader.tsx","webpack:///./src/components/nullState.tsx","webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/tile.module.css","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.module.css","webpack:///./src/components/detailedTile.module.css","webpack:///./src/components/dataLoader.module.css","webpack:///./src/components/nullState.module.css","webpack:///./src/pages/index.module.css"],"names":["Header","_ref","_classnames","className","loading","children","classes","classnames","styles","header","logoClasses","logo","spin","react_default","a","createElement","title","githubContainer","href","githubLogo","step7","Math","floor","palette7","Array","fill","map","_","i","value","palette8","unshift","palette","zip","reduce","b","pair","concat","CORNER_WIDTH","TILE_WIDTH","CORNER_HEIGHT","TILE_HEIGHT","buildCorner","pixelStream","startIndex","rows","y","cells","x","color","push","CORNER_POSITIONS","renderTile","corners","context","forEach","corner","imageData","createImageData","index","c","data","placeData","putImageData","CTileCmp","onLoad","canvasEl","useRef","useEffect","current","getContext","width","height","extractCorners","cData","tileIndex","endIndex","pixels","plane0","c1Data","plane1","plane2","c2Data","plane3","paletteIndex","getPixels","setTimeout","tile","rendered","ref","CTile","React","memo","pixelData","tilePixels","STileCmp","sData","pixelPair","rightPixelIndex","leftPixelRgb","rightPixelRgb","STile","getIndexedCData","indexStream","indices","getIndexStream","finalIndexedTile","startX","startY","cornersToTile","getFgColor","paletteColor","join","DetailedTileCmp","onPrev","onNext","onClose","detailedTile","cTile","fileType","sTile","column","cell","style","backgroundColor","row","getRows","leftPixelIndex","getIndexedSData","getIndexedData","closeButtonClasses","closeButton","cellContainer","closeContainer","toString","toUpperCase","onClick","DetailedTile","getCIndex","fileName","result","exec","parseInt","isC1File","file","cIndex","name","areCRomFiles","files","length","from","every","isAnSRomFile","isCorrectLength","tileSize","setConfig","pureSFC","DataLoader","statusMessageFromProps","statusMessage","_useState","useState","setStatusMessage","type","onChange","e","target","firstIndex","secondIndex","minIndex","min","max","areAProperPair","fr","FileReader","onload","e1","fr2","e2","Uint8Array","filename","readAsArrayBuffer","multiple","errorMessage","NullState","showHelp","setShowHelp","nullState","helpClasses","howToGetAPair","shown","buttonClasses","showHelpButton","callout","formatWithCommas","n","Number","toLocaleString","titleImageUrl","__webpack_exports__","romData","setData","_useState2","loaded","setLoaded","_useState3","modalIndex","setModalIndex","_getTileIndices","tileIndices","numTiles","totalTiles","getTileIndices","Tile","tileClasses","gatsby_browser_entry","query","render","Fragment","Helmet_default","site","siteMetadata","meta","content","keywords","twitterHandle","description","lang","root","header_Header","dataLoader_DataLoader","newCData","tilesContainer","nullState_NullState","t","_classnames2","tileContainerClasses","tileContainer","tileSelected","key","undefined","fool","_1074121603","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","props","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","clearLink","dragSection","spinner"],"mappings":"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","file":"component---src-pages-index-tsx-b5d129dece564514a324.js","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\n\nimport styles from \"./header.module.css\";\n\ninterface HeaderProps {\n    className?: string;\n    loading: boolean;\n}\n\nconst Header: React.StatelessComponent<HeaderProps> = ({ className, loading, children }) => {\n    const classes = classnames(styles.header, className);\n    const logoClasses = classnames(styles.logo, { [styles.spin]: loading });\n\n    return (\n        <header className={classes}>\n            <div className={logoClasses} />\n            <div className={styles.title}>sprite tile viewer</div>\n            {children}\n            <a className={styles.githubContainer} href=\"https://github.com/city41/neospriteviewer\">\n                <div className={styles.githubLogo} />\n            </a>\n        </header>\n    );\n};\n\nexport { Header };\n","import zip from \"lodash.zip\";\n\nconst step7 = Math.floor(256 / 7);\nconst palette7 = new Array(7).fill(1, 0, 15).map((_, i) => {\n    const value = (i + 1) * step7;\n    return [value * 0.6, value * 0.9, value, 255];\n});\n\nconst step8 = 256 / 8;\nconst palette8 = new Array(8).fill(1, 0, 15).map((_, i) => {\n    const value = (i + 1) * step8;\n    return [value, value * 0.9, value * 0.6, 255];\n});\n\npalette7.unshift([0, 0, 0, 0]);\n\nconst zipped = zip(palette7, palette8);\n\nconst palette: number[][] = zipped.reduce((b, pair) => b.concat((pair as any) as number[][]), [] as number[][]);\n\nexport { palette };\n","import React, { useRef, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport { CData } from \"../interfaces\";\nimport { palette } from \"../palette\";\n\nimport styles from \"./tile.module.css\";\n\nconst TILE_WIDTH = 16;\nconst TILE_HEIGHT = 16;\nconst CORNER_WIDTH = TILE_WIDTH / 2;\nconst CORNER_HEIGHT = TILE_HEIGHT / 2;\n\nconst PIXEL_STREAM_LENGTH = 16 * 16;\n\ninterface CTileProps {\n    className?: string;\n    data: CData | null;\n    index: number;\n    onLoad?: () => void;\n}\n\nfunction getPixels(cData: CData, tileIndex: number): number[][] {\n    const startIndex = tileIndex * 64;\n    const endIndex = (tileIndex + 1) * 64;\n\n    const pixels = [];\n\n    for (let i = startIndex; i < endIndex; i += 2) {\n        const plane0 = cData.c1Data[i];\n        const plane1 = cData.c1Data[i + 1];\n        const plane2 = cData.c2Data[i];\n        const plane3 = cData.c2Data[i + 1];\n\n        for (let b = 0; b < 8; ++b) {\n            let paletteIndex = 0;\n            paletteIndex |= (plane0 >> b) & 1;\n            paletteIndex |= ((plane1 >> b) & 1) << 1;\n            paletteIndex |= ((plane2 >> b) & 1) << 2;\n            paletteIndex |= ((plane3 >> b) & 1) << 3;\n\n            pixels.push(palette[paletteIndex]);\n        }\n    }\n\n    return pixels;\n}\n\nfunction buildCorner(pixelStream: number[][], startIndex: number): number[][][] {\n    const rows = [];\n    for (let y = 0; y < 8; ++y) {\n        const cells = [];\n        for (let x = 0; x < 8; ++x) {\n            const cornerIndex = y * 8 + x;\n            const pixelIndex = startIndex + cornerIndex;\n\n            const color = pixelStream[pixelIndex];\n\n            cells.push(color);\n        }\n\n        rows.push(cells);\n    }\n\n    return rows;\n}\n\nfunction extractCorners(pixelStream: number[][]): number[][][][] {\n    const cornerSize = 8 * 8;\n\n    return [\n        buildCorner(pixelStream, 2 * cornerSize), // upper left\n        buildCorner(pixelStream, 0 * cornerSize), // upper right\n        buildCorner(pixelStream, 3 * cornerSize), // lower left\n        buildCorner(pixelStream, 1 * cornerSize) // lower right\n    ];\n}\n\nfunction placeData(imageData: ImageData, corner: number[][][]) {\n    for (let y = 0; y < CORNER_HEIGHT; ++y) {\n        for (let x = 0; x < CORNER_WIDTH; ++x) {\n            const index = (y * CORNER_WIDTH + x) * 4;\n            const color = corner[y][x];\n\n            for (let c = 0; c < 4; ++c) {\n                imageData.data[index + c] = color[c];\n            }\n        }\n    }\n}\n\nconst CORNER_POSITIONS = [\n    // upper left\n    [0, 0],\n    // upper right\n    [8, 0],\n    // lower left\n    [0, 8],\n    // lower right\n    [8, 8]\n];\n\nfunction renderTile(corners: number[][][][], context: CanvasRenderingContext2D) {\n    corners.forEach((corner, i) => {\n        const imageData = context.createImageData(CORNER_WIDTH, CORNER_HEIGHT);\n        placeData(imageData, corner);\n        context.putImageData(imageData, CORNER_POSITIONS[i][0], CORNER_POSITIONS[i][1]);\n    });\n}\n\nconst CTileCmp: React.StatelessComponent<CTileProps> = ({ className, data, index, onLoad }) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null);\n\n    if (!data) return null;\n\n    useEffect(() => {\n        if (canvasEl && canvasEl.current) {\n            const context = canvasEl.current.getContext(\"2d\");\n\n            if (context) {\n                canvasEl.current.width = TILE_WIDTH;\n                canvasEl.current.height = TILE_HEIGHT;\n\n                const pixelStream = getPixels(data, index);\n\n                const corners = extractCorners(pixelStream);\n                renderTile(corners, context);\n\n                if (onLoad) {\n                    onLoad();\n                }\n\n                setTimeout(() => {\n                    if (canvasEl && canvasEl.current) {\n                        canvasEl.current.className = classnames(styles.tile, className, styles.rendered);\n                    }\n                }, 100);\n            }\n        }\n    });\n\n    const classes = classnames(styles.tile, className);\n    return <canvas className={classes} ref={canvasEl} />;\n};\n\nlet CTile = CTileCmp;\n\nif (process.env.NODE_ENV === \"production\") {\n    CTile = React.memo(CTileCmp);\n}\n\nexport { CTile };\n","import React, { useRef, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport { SData } from \"../interfaces\";\nimport { palette } from \"../palette\";\n\nimport styles from \"./tile.module.css\";\n\nconst TILE_WIDTH = 8;\nconst TILE_HEIGHT = 8;\n\ninterface STileProps {\n    className?: string;\n    data: SData | null;\n    index: number;\n    onLoad?: () => void;\n}\n\nfunction getPixels(sData: SData, tileIndex: number): number[][][] {\n    let startIndex = tileIndex * 32;\n    const endIndex = (tileIndex + 1) * 32;\n\n    const pixels: number[][][] = [[], [], [], [], [], [], [], []];\n\n    // get column A\n    for (let i = 0; i < 8; ++i) {\n        const pixelPair = sData.sData[startIndex++];\n        const rightPixelIndex = (pixelPair >> 4) & 0xf;\n        const leftPixelIndex = pixelPair & 0xf;\n\n        const leftPixelRgb = palette[leftPixelIndex];\n        const rightPixelRgb = palette[rightPixelIndex];\n\n        pixels[i][4] = leftPixelRgb;\n        pixels[i][5] = rightPixelRgb;\n    }\n\n    // get column B\n    for (let i = 0; i < 8; ++i) {\n        const pixelPair = sData.sData[startIndex++];\n        const rightPixelIndex = (pixelPair >> 4) & 0xf;\n        const leftPixelIndex = pixelPair & 0xf;\n\n        const leftPixelRgb = palette[leftPixelIndex];\n        const rightPixelRgb = palette[rightPixelIndex];\n\n        pixels[i][6] = leftPixelRgb;\n        pixels[i][7] = rightPixelRgb;\n    }\n\n    // get column C\n    for (let i = 0; i < 8; ++i) {\n        const pixelPair = sData.sData[startIndex++];\n        const rightPixelIndex = (pixelPair >> 4) & 0xf;\n        const leftPixelIndex = pixelPair & 0xf;\n\n        const leftPixelRgb = palette[leftPixelIndex];\n        const rightPixelRgb = palette[rightPixelIndex];\n\n        pixels[i][0] = leftPixelRgb;\n        pixels[i][1] = rightPixelRgb;\n    }\n\n    // get column D\n    for (let i = 0; i < 8; ++i) {\n        const pixelPair = sData.sData[startIndex++];\n        const rightPixelIndex = (pixelPair >> 4) & 0xf;\n        const leftPixelIndex = pixelPair & 0xf;\n\n        const leftPixelRgb = palette[leftPixelIndex];\n        const rightPixelRgb = palette[rightPixelIndex];\n\n        pixels[i][2] = leftPixelRgb;\n        pixels[i][3] = rightPixelRgb;\n    }\n\n    return pixels;\n}\n\nfunction placeData(imageData: ImageData, tilePixels: number[][][]) {\n    for (let y = 0; y < TILE_HEIGHT; ++y) {\n        for (let x = 0; x < TILE_WIDTH; ++x) {\n            const index = (y * TILE_WIDTH + x) * 4;\n            const color = tilePixels[y][x];\n\n            for (let c = 0; c < 4; ++c) {\n                imageData.data[index + c] = color[c];\n            }\n        }\n    }\n}\n\nfunction renderTile(pixelData: number[][][], context: CanvasRenderingContext2D) {\n    const imageData = context.createImageData(TILE_WIDTH, TILE_HEIGHT);\n    placeData(imageData, pixelData);\n    context.putImageData(imageData, 0, 0);\n}\n\nconst STileCmp: React.StatelessComponent<STileProps> = ({ className, data, index, onLoad }) => {\n    if (!data) return null;\n\n    const canvasEl = useRef<HTMLCanvasElement | null>(null);\n\n    useEffect(() => {\n        if (canvasEl && canvasEl.current) {\n            const context = canvasEl.current.getContext(\"2d\");\n\n            if (context) {\n                canvasEl.current.width = TILE_WIDTH;\n                canvasEl.current.height = TILE_HEIGHT;\n\n                const pixelData = getPixels(data, index);\n\n                renderTile(pixelData, context);\n\n                if (onLoad) {\n                    onLoad();\n                }\n\n                setTimeout(() => {\n                    if (canvasEl && canvasEl.current) {\n                        canvasEl.current.className = classnames(styles.tile, className, styles.rendered);\n                    }\n                }, 100);\n            }\n        }\n    });\n\n    const classes = classnames(styles.tile, className);\n    return <canvas className={classes} ref={canvasEl} />;\n};\n\nlet STile = STileCmp;\n\nif (process.env.NODE_ENV === \"production\") {\n    STile = React.memo(STileCmp);\n}\n\nexport { STile };\n","import { SData, CData } from \"./interfaces\";\n\nfunction getIndexStream(data: CData, tileIndex: number): number[] {\n    const startIndex = tileIndex * 64;\n    const endIndex = (tileIndex + 1) * 64;\n\n    const indices = [];\n\n    for (let i = startIndex; i < endIndex; i += 2) {\n        const plane0 = data.c1Data[i];\n        const plane1 = data.c1Data[i + 1];\n        const plane2 = data.c2Data[i];\n        const plane3 = data.c2Data[i + 1];\n\n        for (let b = 0; b < 8; ++b) {\n            let paletteIndex = 0;\n            paletteIndex |= (plane0 >> b) & 1;\n            paletteIndex |= ((plane1 >> b) & 1) << 1;\n            paletteIndex |= ((plane2 >> b) & 1) << 2;\n            paletteIndex |= ((plane3 >> b) & 1) << 3;\n\n            indices.push(paletteIndex);\n        }\n    }\n\n    return indices;\n}\n\nfunction buildCorner(pixelStream: number[], startIndex: number): number[][] {\n    const rows = [];\n    for (let y = 0; y < 8; ++y) {\n        const cells = [];\n        for (let x = 0; x < 8; ++x) {\n            const cornerIndex = y * 8 + x;\n            const pixelIndex = startIndex + cornerIndex;\n\n            const color = pixelStream[pixelIndex];\n\n            cells.push(color);\n        }\n\n        rows.push(cells);\n    }\n\n    return rows;\n}\n\nfunction extractCorners(pixelStream: number[]): number[][][] {\n    const cornerSize = 8 * 8;\n\n    return [\n        buildCorner(pixelStream, 2 * cornerSize), // upper left\n        buildCorner(pixelStream, 0 * cornerSize), // upper right\n        buildCorner(pixelStream, 3 * cornerSize), // lower left\n        buildCorner(pixelStream, 1 * cornerSize) // lower right\n    ];\n}\n\nconst CORNER_POSITIONS = [\n    // upper left\n    [0, 0],\n    // upper right\n    [0, 8],\n    // lower left\n    [8, 0],\n    // lower right\n    [8, 8]\n];\n\nfunction cornersToTile(corners: number[][][]): number[][] {\n    const finalIndexedTile: number[][] = [[]];\n\n    corners.forEach((corner, i) => {\n        const startX = CORNER_POSITIONS[i][0];\n        const startY = CORNER_POSITIONS[i][1];\n\n        for (let x = startX; x < startX + 8; ++x) {\n            for (let y = startY; y < startY + 8; ++y) {\n                finalIndexedTile[x] = finalIndexedTile[x] || [];\n                finalIndexedTile[x][y] = corner[x - startX][y - startY];\n            }\n        }\n    });\n\n    return finalIndexedTile;\n}\n\nfunction getIndexedCData(data: CData, tileIndex: number): number[][] {\n    const indexStream = getIndexStream(data, tileIndex);\n    const corners = extractCorners(indexStream);\n\n    return cornersToTile(corners);\n}\n\nfunction getIndexedSData(data: SData, tileIndex: number): number[][] {\n    let startIndex = tileIndex * 32;\n    const endIndex = (tileIndex + 1) * 32;\n\n    const indices: number[][] = [[], [], [], [], [], [], [], []];\n\n    // get column A\n    for (let i = 0; i < 8; ++i) {\n        const pixelPair = data.sData[startIndex++];\n        const rightPixelIndex = (pixelPair >> 4) & 0xf;\n        const leftPixelIndex = pixelPair & 0xf;\n\n        indices[i][4] = leftPixelIndex;\n        indices[i][5] = rightPixelIndex;\n    }\n\n    // get column B\n    for (let i = 0; i < 8; ++i) {\n        const pixelPair = data.sData[startIndex++];\n        const rightPixelIndex = (pixelPair >> 4) & 0xf;\n        const leftPixelIndex = pixelPair & 0xf;\n\n        indices[i][6] = leftPixelIndex;\n        indices[i][7] = rightPixelIndex;\n    }\n\n    // get column C\n    for (let i = 0; i < 8; ++i) {\n        const pixelPair = data.sData[startIndex++];\n        const rightPixelIndex = (pixelPair >> 4) & 0xf;\n        const leftPixelIndex = pixelPair & 0xf;\n\n        indices[i][0] = leftPixelIndex;\n        indices[i][1] = rightPixelIndex;\n    }\n\n    // get column D\n    for (let i = 0; i < 8; ++i) {\n        const pixelPair = data.sData[startIndex++];\n        const rightPixelIndex = (pixelPair >> 4) & 0xf;\n        const leftPixelIndex = pixelPair & 0xf;\n\n        indices[i][2] = leftPixelIndex;\n        indices[i][3] = rightPixelIndex;\n    }\n\n    return indices;\n}\n\nexport function getIndexedData(data: CData | SData, tileIndex: number): number[][] {\n    if (data.fileType === \"C\") {\n        return getIndexedCData(data, tileIndex);\n    } else {\n        return getIndexedSData(data, tileIndex);\n    }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { CData, SData } from \"../interfaces\";\nimport { palette } from \"../palette\";\nimport { getIndexedData } from \"../indexedData\";\n\nimport styles from \"./detailedTile.module.css\";\n\ninterface DetailedTileProps {\n    className?: string;\n    data: CData | SData | null;\n    index: number;\n    onPrev: () => void;\n    onNext: () => void;\n    onClose: () => void;\n}\n\nfunction getBgColor(index: number): string {\n    const color = [...palette[index]];\n\n    return `rgba(${color.join(\",\")})`;\n}\n\nfunction getFgColor(index: number): string {\n    if (index >= 5 && index <= 10) {\n        return \"white\";\n    }\n\n    const paletteColor = palette[index];\n\n    let color;\n    if (paletteColor[3] === 0) {\n        color = [0, 0, 0, 255];\n    } else {\n        color = paletteColor.map(c => 255 - c);\n        color[3] = 1;\n    }\n\n    return `rgba(${color.join(\",\")})`;\n}\n\nfunction getRows(indices: number[][]) {\n    return indices.map(column => {\n        const cells = column.map(c => (\n            <div className={styles.cell} style={{ backgroundColor: getBgColor(c), color: getFgColor(c) }}>\n                {c}\n            </div>\n        ));\n        return <div className={styles.row}>{cells}</div>;\n    });\n}\n\nconst DetailedTileCmp: React.StatelessComponent<DetailedTileProps> = ({ className, data, index, onPrev, onNext, onClose }) => {\n    if (!data || index < 0) {\n        return null;\n    }\n\n    const classes = classnames(styles.detailedTile, className, {\n        [styles.cTile]: data.fileType === \"C\",\n        [styles.sTile]: data.fileType === \"S\"\n    });\n\n    const indices = getIndexedData(data, index);\n\n    const rows = getRows(indices);\n\n    const closeButtonClasses = classnames(styles.closeButton, \"button\");\n\n    return (\n        <div className={classes}>\n            <div className={styles.cellContainer}>{rows}</div>\n            <div className={styles.closeContainer}>\n                <h2>\n                    tile index 0x{index.toString(16).toUpperCase()} ({index})\n                </h2>\n                <button className=\"button\" onClick={onPrev}>\n                    prev\n                </button>\n                <button className=\"button\" onClick={onNext}>\n                    next\n                </button>\n                <button className={closeButtonClasses} onClick={onClose}>\n                    close\n                </button>\n            </div>\n        </div>\n    );\n};\n\nlet DetailedTile = DetailedTileCmp;\n\nif (process.env.NODE_ENV === \"production\") {\n    DetailedTile = React.memo(DetailedTileCmp);\n}\nexport { DetailedTile };\n","import React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport { CData, SData } from \"../interfaces\";\n\nimport { setConfig } from \"react-hot-loader\";\n// @ts-ignore: the typing for setConfig doesn't have this prop but it does work\nsetConfig({ pureSFC: true });\n\nimport styles from \"./dataLoader.module.css\";\n\ninterface DataLoaderProps {\n    className?: string;\n    onLoad: (data: CData | SData | null) => void;\n    data: CData | SData | null;\n    statusMessage: string | null;\n}\n\nfunction getCIndex(fileName: string): number | null {\n    const regex = /.*[cC](\\d).*/g;\n\n    const result = regex.exec(fileName);\n\n    if (result) {\n        return parseInt(result[1], 10);\n    } else {\n        return null;\n    }\n}\n\nfunction getSIndex(fileName: string): number | null {\n    const regex = /.*[sS](\\d).*/g;\n\n    const result = regex.exec(fileName);\n\n    if (result) {\n        return parseInt(result[1], 10);\n    } else {\n        return null;\n    }\n}\n\nfunction isC1File(file: File) {\n    const cIndex = getCIndex(file.name);\n\n    return !!(cIndex && cIndex & 1);\n}\n\nfunction areCRomFiles(files: FileList): boolean {\n    return files.length === 2 && Array.from(files).every(file => !!getCIndex(file.name));\n}\n\nfunction isAnSRomFile(files: FileList): boolean {\n    return files.length === 1 && !!getSIndex(files[0].name);\n}\n\nfunction areAProperPair(files: FileList) {\n    const firstIndex = getCIndex(files[0].name);\n    const secondIndex = getCIndex(files[1].name);\n\n    if (!firstIndex || !secondIndex) {\n        return false;\n    }\n\n    const minIndex = Math.min(firstIndex, secondIndex);\n    const maxIndex = Math.max(firstIndex, secondIndex);\n\n    // the pair has to be consecutive with the odd number coming first\n    // ie: C3,C4 is a valid pair, but C4,C5 is not\n    return maxIndex - minIndex === 1 && !!(minIndex & 1);\n}\n\nfunction isCorrectLength(data: Uint8Array, tileSize: number): boolean {\n    return data.length % tileSize === 0;\n}\n\nconst DataLoader: React.StatelessComponent<DataLoaderProps> = ({ className, onLoad, statusMessage: statusMessageFromProps }) => {\n    const [statusMessage, setStatusMessage] = useState<string | null>(null);\n\n    function onFilesChosen(e: React.ChangeEvent<HTMLInputElement>) {\n        setStatusMessage(null);\n\n        const files = e.target.files;\n\n        if (!files || files.length === 0) {\n            return onLoad(null);\n        }\n\n        if (!areCRomFiles(files) && !isAnSRomFile(files)) {\n            return setStatusMessage(\"Please choose a pair of C ROM files or an S ROM file\");\n        }\n\n        if (areCRomFiles(files)) {\n            if (!areAProperPair(files)) {\n                return setStatusMessage(\"Please choose a proper pair, click the help below\");\n            }\n            const fr = new FileReader();\n\n            fr.onload = e1 => {\n                const fr2 = new FileReader();\n                fr2.onload = e2 => {\n                    const c1Data = new Uint8Array((isC1File(files[0]) ? fr.result : fr2.result) as ArrayBuffer);\n                    const c2Data = new Uint8Array((isC1File(files[1]) ? fr.result : fr2.result) as ArrayBuffer);\n\n                    if (!isCorrectLength(c1Data, 64) || !isCorrectLength(c2Data, 64)) {\n                        setStatusMessage(\"Invalid files, not multiples of 64 bytes\");\n                    } else {\n                        onLoad({ fileType: \"C\", c1Data, c2Data, filename: files[0].name });\n                    }\n                };\n                fr2.readAsArrayBuffer(files[1]);\n            };\n\n            fr.readAsArrayBuffer(files[0]);\n        } else {\n            const fr = new FileReader();\n\n            fr.onload = e1 => {\n                const sData = new Uint8Array(fr.result as ArrayBuffer);\n\n                if (!isCorrectLength(sData, 32)) {\n                    setStatusMessage(\"Invalid file, not multiple of 32 bytes\");\n                } else {\n                    onLoad({ fileType: \"S\", sData, filename: files[0].name });\n                }\n            };\n\n            fr.readAsArrayBuffer(files[0]);\n        }\n    }\n\n    return (\n        <div>\n            <input type=\"file\" onChange={onFilesChosen} multiple={true} />\n            <span className={styles.errorMessage}>{statusMessage || statusMessageFromProps}</span>\n        </div>\n    );\n};\n\nexport { DataLoader };\n","import React, { useState } from \"react\";\nimport classnames from \"classnames\";\n\nimport styles from \"./nullState.module.css\";\n\ninterface NullStateProps {\n    className?: string;\n}\n\nconst NullState: React.StatelessComponent<NullStateProps> = ({ className }) => {\n    const [showHelp, setShowHelp] = useState<boolean>(false);\n\n    const classes = classnames(styles.nullState, className);\n    const helpClasses = classnames(styles.howToGetAPair, {\n        [styles.shown]: showHelp\n    });\n\n    const buttonClasses = classnames(\"button\", styles.showHelpButton);\n\n    return (\n        <div className={classes}>\n            <div className={styles.callout}>\n                <h1>View the sprite tiles of a Neo Geo game</h1>\n                <p>choose an S ROM file or a C ROM pair from a game's romset in the file chooser above</p>\n                {!showHelp && (\n                    <button className={buttonClasses} onClick={() => setShowHelp(true)}>\n                        help\n                    </button>\n                )}\n            </div>\n            <div className={helpClasses}>\n                <h2>Where to get these files</h2>\n                <p>\n                    Neo Geo ROMs are usually bundled in a zip file. Unzip a game and you'll find a bunch of files. You are interested in S\n                    files or C files.\n                </p>\n                <h2>How to get an S ROM file</h2>\n                <ul>\n                    <li>Unzip a Neo Geo game</li>\n                    <li>\n                        There will usually be one S file, such as <code>201-s1.s1</code> in Metal Slug or <code>019-s1.rom</code> in League\n                        Bowling\n                    </li>\n                    <li>Choose that file in the file dialog above</li>\n                </ul>\n                <h2>How to get a C ROM file pair</h2>\n                <ul>\n                    <li>Unzip a Neo Geo game</li>\n                    <li>\n                        There will be at least two C ROM files, such as <code>019-c1.rom</code> and <code>019-c2.rom</code> for League\n                        Bowling, or <code>RBFF1_C1.rom</code> and <code>RBFF1_C2.rom</code> for Real Bout Fatal Fury.\n                    </li>\n                    <li>Choose those two files in the file dialog above</li>\n                </ul>\n\n                <p>\n                    Bigger games will have more C ROM file pairs. Real Bout Fatal Fury has C1, C2, C3, C4, C5, C6, C7 and C8 ROMs. You can\n                    grab any pair, as long as they go together. C1 and C2 go together, C3 and C4 go together, and so on.\n                </p>\n                <h2>What is the difference between C and S?</h2>\n                <p>\n                    The data inside C ROMs is for the main sprites of the game: the characters, backgrounds, bullets, etc. The data inside\n                    the S ROMs is for the fix layer. This layer is drawn above all sprites and it never scrolls. So S data is for things\n                    like the current score, number of lives, etc. The \"HUD\" if you will.\n                </p>\n                <h2>Why are the colors so weird?</h2>\n                <p>\n                    The sprites are stored separate from the color palettes. There's no good way to get the color data from a ROM without\n                    running the game. So an alternating blue/yellow palette was chosen as it allows the different colors to stand out.\n                </p>\n                <p>\n                    For more info on tiles and palettes,{\" \"}\n                    <a href=\"https://mattgreer.dev/blog/extracting-neo-geo-emulator-graphics-data-to-create-animated-gifs/#lets-talk-about-the-neo-geo\">\n                        this blog post I wrote\n                    </a>{\" \"}\n                    goes into more detail.\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport { NullState };\n","import React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { setConfig } from \"react-hot-loader\";\nimport { Header } from \"../components/header\";\nimport { CTile } from \"../components/cTile\";\nimport { STile } from \"../components/sTile\";\nimport { DetailedTile } from \"../components/detailedTile\";\nimport { DataLoader } from \"../components/dataLoader\";\nimport { NullState } from \"../components/nullState\";\nimport { CData, SData } from \"../interfaces\";\n\n// @ts-ignore: the typing for setConfig doesn't have this prop but it does work\nsetConfig({ pureSFC: true });\n\nimport \"./global.css\";\nimport styles from \"./index.module.css\";\n\nfunction formatWithCommas(n: number): string {\n    if (\"toLocaleString\" in new Number(n)) {\n        return n.toLocaleString();\n    } else {\n        // if the browser doesn't support it, just fall back to no commas, no big deal\n        return n.toString();\n    }\n}\n\nfunction getTileIndices(data: CData | SData | null): { tileIndices: number[] | null; numTiles: number; totalTiles: number } {\n    if (!data) {\n        return { tileIndices: null, numTiles: 0, totalTiles: 0 };\n    }\n\n    let totalTiles: number | null = null;\n\n    if (data.fileType === \"C\") {\n        // one tile is 128 bytes, half of the tile is in C1,\n        // so total tiles is length divided by (128 / 2)\n        totalTiles = data.c1Data.length / 64;\n    } else {\n        // fix rom tiles are 32 bytes each\n        totalTiles = data.sData.length / 32;\n    }\n\n    const numTiles = Math.min(totalTiles, 1024);\n    const tileIndices = new Array(numTiles).fill(1, 0, numTiles).map((_, i) => i + 0);\n\n    return { tileIndices, numTiles, totalTiles };\n}\n\nconst query = graphql`\n    query MetaDataQuery {\n        site {\n            siteMetadata {\n                title\n                keywords\n                description\n                twitterHandle\n            }\n        }\n    }\n`;\n\nconst titleImageUrl = \"https://city41.github.io/neospriteviewer/fool.png\";\n\nexport default () => {\n    const [romData, setData] = useState<CData | SData | null>(null);\n    const [loaded, setLoaded] = useState<boolean>(false);\n    const [modalIndex, setModalIndex] = useState<number>(-1);\n\n    const { tileIndices, numTiles, totalTiles } = getTileIndices(romData);\n\n    const Tile: React.ComponentType<any> = romData && romData.fileType === \"C\" ? CTile : STile;\n    const tileClasses = classnames(styles.tile, {\n        [styles.cTile]: romData && romData.fileType === \"C\",\n        [styles.sTile]: romData && romData.fileType === \"S\"\n    });\n\n    return (\n        <StaticQuery\n            query={query}\n            render={data => (\n                <>\n                    <Helmet\n                        title={data.site.siteMetadata.title}\n                        meta={[\n                            {\n                                name: \"description\",\n                                content: data.site.siteMetadata.title\n                            },\n                            {\n                                name: \"keywords\",\n                                content: data.site.siteMetadata.keywords\n                            },\n                            {\n                                name: \"twitter:card\",\n                                content: \"summary\"\n                            },\n                            {\n                                name: \"twitter:site\",\n                                content: data.site.siteMetadata.twitterHandle\n                            },\n                            {\n                                name: \"twitter:title\",\n                                content: data.site.siteMetadata.title\n                            },\n                            {\n                                name: \"twitter:description\",\n                                content: data.site.siteMetadata.description\n                            },\n                            {\n                                name: \"twitter:image\",\n                                content: titleImageUrl\n                            },\n                            {\n                                name: \"og:title\",\n                                content: data.site.siteMetadata.title\n                            },\n                            {\n                                name: \"og:type\",\n                                content: \"website\"\n                            },\n                            {\n                                name: \"og:url\",\n                                content: \"https://city41.github.io/neospriteviewer\"\n                            },\n                            {\n                                name: \"og:description\",\n                                content: data.site.siteMetadata.description\n                            },\n                            {\n                                name: \"og:image\",\n                                content: titleImageUrl\n                            },\n                            {\n                                name: \"og:title\",\n                                content: data.site.siteMetadata.title\n                            }\n                        ]}\n                    >\n                        <html lang=\"en\" />\n                    </Helmet>\n                    <div className={styles.root}>\n                        <Header className={styles.header} loading={!!tileIndices && !loaded}>\n                            <DataLoader\n                                onLoad={newCData => {\n                                    setLoaded(false);\n                                    setData(newCData);\n                                }}\n                                data={data}\n                                statusMessage={\n                                    numTiles < totalTiles\n                                        ? `there are ${formatWithCommas(\n                                              totalTiles\n                                          )} tiles in total, but only showing first ${formatWithCommas(numTiles)}`\n                                        : null\n                                }\n                            />\n                        </Header>\n\n                        <div className={styles.tilesContainer}>\n                            {!tileIndices && <NullState />}\n                            {(tileIndices || []).map((t, i, a) => {\n                                const tileContainerClasses = classnames(styles.tileContainer, {\n                                    [styles.tileSelected]: i === modalIndex\n                                });\n\n                                return (\n                                    <div className={tileContainerClasses} onClick={() => setModalIndex(t)}>\n                                        <Tile\n                                            key={((data && data.filename) || \"X\") + \"-\" + t}\n                                            className={tileClasses}\n                                            data={romData}\n                                            index={t}\n                                            onLoad={i === a.length - 1 ? () => setLoaded(true) : undefined}\n                                        />\n                                        <div className={styles.tileIndex}>{t}</div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                        {modalIndex > -1 && (\n                            <DetailedTile\n                                onPrev={() => setModalIndex(Math.max(0, modalIndex - 1))}\n                                onNext={() => setModalIndex(Math.min(numTiles - 1, modalIndex + 1))}\n                                onClose={() => setModalIndex(-1)}\n                                className={styles.detailedTile}\n                                data={romData}\n                                index={modalIndex}\n                            />\n                        )}\n                        <div className={styles.fool} />\n                    </div>\n                </>\n            )}\n        />\n    );\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"tile-module--tile--3HS9P\",\"rendered\":\"tile-module--rendered--2lZM1\"};","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header-module--header--2Q3RK\",\"logo\":\"header-module--logo--3gu8x\",\"spin\":\"header-module--spin--1xYqr\",\"title\":\"header-module--title--2iLmX\",\"githubContainer\":\"header-module--githubContainer--1VQcl\",\"githubLogo\":\"header-module--githubLogo--ShHbe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailedTile\":\"detailedTile-module--detailedTile--3y6vP\",\"cTile\":\"detailedTile-module--cTile--3iGe6\",\"sTile\":\"detailedTile-module--sTile--J09xW\",\"cellContainer\":\"detailedTile-module--cellContainer--3eukf\",\"row\":\"detailedTile-module--row--1Rztv\",\"cell\":\"detailedTile-module--cell--n8_dT\",\"closeContainer\":\"detailedTile-module--closeContainer--16HeK\",\"closeButton\":\"detailedTile-module--closeButton--2U2MY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearLink\":\"dataLoader-module--clearLink--jpfao\",\"errorMessage\":\"dataLoader-module--errorMessage--31bie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nullState\":\"nullState-module--nullState--3TyrL\",\"callout\":\"nullState-module--callout--1Lax5\",\"showHelpButton\":\"nullState-module--showHelpButton--1yX1C\",\"dragSection\":\"nullState-module--dragSection--DcgtF\",\"howToGetAPair\":\"nullState-module--howToGetAPair--27gEc\",\"shown\":\"nullState-module--shown--2LdsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"index-module--root--OnpaA\",\"header\":\"index-module--header--2Vq0q\",\"spinner\":\"index-module--spinner--2CrOq\",\"tilesContainer\":\"index-module--tilesContainer--3rnbq\",\"tileContainer\":\"index-module--tileContainer--12Ugs\",\"tile\":\"index-module--tile--d2rEI\",\"tileSelected\":\"index-module--tileSelected--csJh2\",\"tileIndex\":\"index-module--tileIndex--20Bbb\",\"cTile\":\"index-module--cTile--1YyuF\",\"sTile\":\"index-module--sTile--3Xyqq\",\"fool\":\"index-module--fool--218QX\",\"detailedTile\":\"index-module--detailedTile--1vXtq\"};"],"sourceRoot":""}